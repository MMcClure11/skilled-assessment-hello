[{"/Users/meganmcclure/Flatiron/practice-react/hello/src/reportWebVitals.js":"1","/Users/meganmcclure/Flatiron/practice-react/hello/src/Hello.js":"2"},{"size":362,"mtime":1612285376825,"results":"3","hashOfConfig":"4"},{"size":1888,"mtime":1612288876658,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rxv322",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/meganmcclure/Flatiron/practice-react/hello/src/reportWebVitals.js",[],"/Users/meganmcclure/Flatiron/practice-react/hello/src/Hello.js",["11"],"//take this component and rewrite it as a functional component\n//you can either write over it directly or write a new component\n\nimport React, { useState, useEffect } from 'react'\n\nconst Hello = ({ helloTranslations }) => {\n\n  const [translations, setTranslations] = useState([])\n\n  useEffect(() => {\n    fetch(helloTranslations)\n      .then(response => response.json())\n      .then(data => {\n        let newArray = data.translations.filter( trans => trans !== 'Hello')\n        setTranslations(newArray)\n      })\n  }, [])\n\n  const logTranslation = (translation) => {\n    console.log(translation)\n  }\n\n  const renderTranslations = () => {\n    return translations.map( trans => <li key={ trans }><button onClick={ () => logTranslation(trans)}>{ trans} </button></li>)\n  }\n\n  return(\n    <>\n      <h1>Hello</h1>\n      <ul>\n        { renderTranslations() }\n      </ul>\n    </>\n  )\n}\n\nexport default Hello\n\n// import React, { Component } from 'react'\n\n// export default class Hello extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       helloTranslations: []\n//     }\n//   }\n\n//   componentDidMount() {\n//     fetch(this.props.helloTranslations)\n//       .then(response => response.json())\n//       .then(data => {\n//         let newArray = data.translations.filter(trans => trans !== 'Hello')\n//         this.setState({helloTranslations: newArray})\n//       })\n//   }\n\n//   logTranslation = (translation) => {\n//     console.log(translation)\n//   }\n\n//   renderTranslations = () => { \n//     return this.state.helloTranslations.map( trans => \n//      <li key={ trans }><button onClick={ () => this.logTranslation(trans) }>{ trans }</button></li> \n//     )\n//   }\n\n//   render() {\n//     return(\n//       <div>\n//         <h1>Hello</h1>\n//         <ul>\n//           { this.renderTranslations() }\n//         </ul>\n//       </div>\n//     )\n//   }\n// }",{"ruleId":"12","severity":1,"message":"13","line":17,"column":6,"nodeType":"14","endLine":17,"endColumn":8,"suggestions":"15"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'helloTranslations'. Either include it or remove the dependency array.","ArrayExpression",["16"],{"desc":"17","fix":"18"},"Update the dependencies array to be: [helloTranslations]",{"range":"19","text":"20"},[518,520],"[helloTranslations]"]